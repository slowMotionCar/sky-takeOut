<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.OrderMapper">
    <insert id="add" parameterType="com.sky.entity.Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders
        (number, status, user_id, address_book_id, order_time, checkout_time, pay_method, pay_status, amount, remark,
         phone, address, consignee, estimated_delivery_time, delivery_status, pack_amount, tableware_number,
         tableware_status)
        values (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{checkoutTime}, #{payMethod},
                #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee},
                #{estimatedDeliveryTime}, #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    <update id="update" parameterType="com.sky.entity.Orders" useGeneratedKeys="true" keyProperty="id">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason!='' ">
                cancel_reason=#{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason!='' ">
                rejection_reason=#{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time=#{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status=#{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method=#{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time=#{checkoutTime},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findOrderByTimeAndStatus" parameterType="com.sky.entity.Orders" resultType="com.sky.entity.Orders">
        select *
        from orders
        where status = #{status}
          and order_time &lt; #{orderTime}
    </select>

    <select id="getOrderByUserId" resultType="com.sky.entity.Orders">
        select *
        from orders
        where id = #{userId}
    </select>

    <select id="getOrderByUserIdAndNumber" resultType="com.sky.entity.Orders">
        select *
        from orders
        where number = #{outTradeNo}
          and user_id = #{currentId}
    </select>

    <select id="findOrderByUserAndStatus" parameterType="com.sky.dto.OrdersPageQueryDTO"
            resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="userId!=null">
                and user_id = #{userId}
            </if>
            <if test="status!=null">
                and status = #{status}
            </if>
        </where>
        order by order_time Desc
    </select>

    <select id="findOrderByOrderId" resultType="com.sky.entity.Orders">
        select *
        from orders
        where id = #{id}
    </select>

    <select id="conditionSearchOrder" parameterType="com.sky.dto.OrdersPageQueryDTO" resultType="com.sky.entity.Orders">
        select * from orders
        <where>
            <if test="number!=null and number!= '' ">
                and number = #{number}
            </if>
            <if test="phone!=null and phone!=''">
                and phone = #{phone}
            </if>
            <if test="status!=null">
                and status = #{status}
            </if>
            <if test="beginTime!=null and endTime!=null">
                and order_time between #{beginTime} and #{endTime}
            </if>
            <if test="userId!=null">
                and user_id = #{userId}
            </if>
        </where>
    </select>

    <select id="countConfirmed" resultType="Integer">
        select count(id) from orders where status = 3;
    </select>

    <select id="countDeliveryInProgress" resultType="Integer">
        select count(id) from orders where status = 4;
    </select>

    <select id="countToBeConfirmed" resultType="Integer">
        select count(id) from orders where status = 2;
    </select>

    <select id="sumByMap" resultType="Double">
        select sum(amount) from orders
        <where>
            <if test="status!=null">
                and status = #{status}
            </if>
            <if test="beginTime!=null">
                and order_time &gt; #{beginTime}
            </if>
            <if test="endTime!=null">
                and order_time &lt; #{endTime}
            </if>
        </where>
    </select>


    <select id="countByMap" resultType="Integer">
        select count(*) from orders
        <where>
            <if test="status!=null">
                and status = #{status}
            </if>
            <if test="beginTime!=null">
                and order_time &gt; #{beginTime}
            </if>
            <if test="endTime!=null">
                and order_time &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="customersStatistic" resultType="Integer">
        select count(*) from user
        <where>
            <if test="beginTime!=null">
                and create_time &gt; #{beginTime}
            </if>
            <if test="endTime!=null">
                and create_time &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="findTop10" resultType="com.sky.dto.GoodsSalesDTO">
        select od.name,
               sum(od.number) as 'number'
        from orders
                 inner join order_detail od on orders.id = od.order_id
        where status = #{status}
          and order_time between #{beginTime} and #{endTime}
        group by od.name
        order by sum(od.number) desc limit 10
    </select>
</mapper>